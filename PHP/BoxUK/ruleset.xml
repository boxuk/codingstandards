<?xml version="1.0"?>
<ruleset name="PHP">

    <description>The Box UK PHP coding standard.</description>

    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel"/>
    <rule ref="Generic.PHP.ForbiddenFunctions"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.NamingConventions.ValidClassName"/>
    
    <!--
    See https://github.com/boxuk/codingstandards/issues/2. We have replaced this
    with our own sniff for the time being until the bug is fixed in CodeSniffer
    core.
    
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>    
    -->
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    
</ruleset>
